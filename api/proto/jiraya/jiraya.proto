syntax = "proto3";

package jiraya;

option go_package = "./protobuf";

import "user.proto";
import "user_contact.proto";
import "auth.proto";
import "project.proto";

//import "google/protobuf/timestamp.proto";
//import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

service Jiraya {
  rpc Auth(AuthRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth";
      body: "*";
    };
  }

  // USER
  rpc CreateUser(CreateUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/users";
      body: "*";
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }

  // USER CONTACT
  rpc GetUserContact(GetUserContactRequest) returns (GetUserContactResponse) {
    option (google.api.http) = {
      get: "/api/v1/user-contacts/{contact_id}"
    };
  }
  rpc GetUserContacts(GetUserContactsRequest) returns (GetUserContactsResponse) {
    option (google.api.http) = {
      get: "/api/v1/user/{user_id}/contacts"
    };
  }
  rpc CreateUserContact(CreateUserContactRequest) returns (GetUserContactResponse) {
    option (google.api.http) = {
      post: "/api/v1/user-contacts"
      body: "*"
    };
  }
  rpc UpdateUserContact(UpdateUserContactRequest) returns (UpdateUserContactResponse) {
    option (google.api.http) = {
      patch: "/api/v1/user-contacts/{contact_id}"
      body: "*"
    };
  }
  rpc DeleteUserContact(DeleteUserContactRequest) returns (DeleteUserContactResponse) {
    option (google.api.http) = {
      delete: "/api/v1/user-contacts/{contact_id}"
      body: "*"
    };
  }

  // PROJECT
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      get: "/api/v1/projects/{project_id}"
    };
  }
  rpc CreateProject(CreateProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      post: "/api/v1/projects"
      body: "*"
    };
  }
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      patch: "/api/v1/projects/{project_id}"
      body: "*"
    };
  }
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {
    option (google.api.http) = {
      delete: "/api/v1/projects/{project_id}"
    };
  }
  rpc CloseProject(CloseProjectRequest) returns (CloseProjectResponse) {
    option (google.api.http) = {
      post: "/api/v1/projects/{project_id}/close"
    };
  }
}